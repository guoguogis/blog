一定要用print('hello'),而不是 print 'hello',因为后面一种语法与python3不兼容。
除此之外，print中还可以跟运算表达式，如 print(5<50),返回True.

input()用于等待用户输入，当有默认输入提示语时，可以写到括号中，如input('your name is:');当输入字符串时需要加引号，输入数字时不用加引号。

python 中没有括号进行块的分隔，需要直接用4个空格来助力块的层级。

#后的代码为注释

from random import randint 导入一个模块的某个方法、变量
import random 导入一个模块

for i in range(a,b),从a循环到b-1,并从序列中取出值赋值给i

python中对于字符串嵌套引号的情况，除了通过\进行转义之外，还可以有三个引号的情况(''')来进行包裹引号的场景

python中字符串与数字不能直接运算，比如print('my' + 1) 会报错，这一点与JS中不同。可以通过格式化处理，如 'my %d'%1。

保留两位小数，'price is %.2f'%4.991,会输出4.99.

"%s's score is %d" % ('Mike', 87) 这种方式可以代入多个值，但是仍然需要保证每个值与其占位的参数类型同。

%后跟变量类型，该类型需要与传入的参数类型相同。

python中定义一个变量时不需要限定类型，变量会根据赋给它的值的类型，自动决定它的类型，这一点跟JS（ES5）中的非常像。但跟JS中不同的是在运算的时候不会自动转换类型。

类型转换：当传入的参数没法转换时，会报错，如int('a')
int(x)
float(x)
str(x)
bool(x)

函数：函数的默认参数方式和JS中的一样，如果一个参数有默认值，那么该参数后的所有参数都需要有默认值
def sayHello():
    print{'hello world'};


JS中的if(a){xxx}else if(b){yyy},可以写成如下；
if a
    xxx
elif b
    yyy

JS中的if(a){xxx}else{yyy}，可以写成如下：
if a
   xxx
else 
   yyy

list 跟JS中的array一样，可以混合成不同类型成员组成的list
访问list的元素时注意下表越界问题。
I=[1,'a'];
I.append(1024);
与[].push相同。
[].join()与JS中的相同
python中的字符串遍历与JS的一样，其字符串具有长度且可遍历。

读取文件，read('1.txt'),readline('1.txt'),readlines('1.txt');

写文件：
data = 'I will be in a file.\nSo cool!'
out = open('output.txt', 'w')
out.write(data)
out.close()


异常处理：与JS的try..catch不同
try:
   f = file('non-exist.txt')
   print 'File opened!'
   f.close()
except:
   print 'File not exists.'
print 'Done'

python中的字典就是JS中的对象。

